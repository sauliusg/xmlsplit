#---*- Makefile -*-------------------------------------------------------
#$Author: saulius $
#$Date: 2019-02-09 11:59:04 +0200 (Sat, 09 Feb 2019) $
#$Revision: 177 $
#$URL: svn+ssh://saulius-grazulis.lt/home/saulius/svn-repositories/makefiles/versions/Makelocal-version-svn $
#------------------------------------------------------------------------

TRUNK    ?= ^/trunk
BRANCHES ?= ^/branches
RELEASES ?= ${BRANCHES}
PKG_NAME ?= $(shell pwd | xargs dirname | xargs basename)

SVN_VERSION_KEYWORDS ?= WIP $$Revision: 177 $$ $$URL: svn+ssh://saulius-grazulis.lt/home/saulius/svn-repositories/makefiles/versions/Makelocal-version-svn $$

.PHONY: release major minor patch

VFILE ?= .version

VERSION := $(shell grep -v "^\#" ${VFILE} | awk '{print $$1}')

## all tests test: lib/Version.slib

version.h: version.hin ${VFILE}
	sed 's/@VERSION@/${VERSION}/' $< > $@

%/Version.pm: %/Version.pmin ${VFILE}
	sed 's/@VERSION@/${VERSION}/' $< > $@

%/package-version: %/package-version.in
	sed 's/@VERSION@/${VERSION}/' $< > $@
	chmod 755 $@

%/Version.slib: %/Version.sin ${VFILE}
	sed 's/@VERSION@/${VERSION}/' $< > $@

release:
	svn ci
	perl -lpi -e 's/\(unreleased\)/(${VERSION})/ if $$. == 1' CHANGELOG
	perl -lpi -e 's/.../${PKG_NAME}/ if $$. == 1' CHANGELOG
	awk '/^#/{print} !/^#/{print $$1}' ${VFILE} > ${VFILE}.$$$$; \
	mv -f ${VFILE}.$$$$ ${VFILE}
	svn ci -m "CHANGELOG: switching from 'unreleased' to '${VERSION}'"
	svn cp ${TRUNK} ${RELEASES}/v${VERSION} \
	   -m "Preparing version ${VERSION} for release in the release branch."
	${MAKE} minor
	echo "${PKG_NAME} (unreleased)\n\n  * ...\n" | cat - CHANGELOG \
		> CHANGELOG.$$$$.tmp; \
	mv -f CHANGELOG.$$$$.tmp CHANGELOG
	awk '/^#/{print} !/^#/{print $$1, "${SVN_VERSION_KEYWORDS}"}' ${VFILE} \
		> ${VFILE}.$$$$; \
	mv -f ${VFILE}.$$$$ ${VFILE}

major:
	awk -F. '/^#/{print} !/^#/{print $$1+1 ".0" ".0", "${SVN_VERSION_KEYWORDS}"}' \
		${VFILE} > ${VFILE}.$$$$; \
	cat ${VFILE}.$$$$ > ${VFILE}; \
	rm -f ${VFILE}.$$$$

minor:
	awk -F. '/^#/{print} !/^#/{print $$1 "." $$2+1 ".0", "${SVN_VERSION_KEYWORDS}"}' \
		${VFILE} > ${VFILE}.$$$$; \
	cat ${VFILE}.$$$$ > ${VFILE}; \
	rm -f ${VFILE}.$$$$

patch:
	awk -F. '/^#/{print} !/^#/{print $$1 "." $$2 "." $$3+1, "${SVN_VERSION_KEYWORDS}"}' \
		${VFILE} > ${VFILE}.$$$$; \
	cat ${VFILE}.$$$$ > ${VFILE}; \
	rm -f ${VFILE}.$$$$

cleanAll distclean: clean-version

clean-version:
	rm -f version.h
	rm -f lib/perl5/XMLSplit/Version.pm
